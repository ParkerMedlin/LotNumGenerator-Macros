Public Declare PtrSafe Function GetTickCount Lib "kernel32.dll" () As Long

Sub Delay(Finish As Long)
    Dim NowTick As Long
    Dim EndTick As Long
    
    EndTick = GetTickCount + (Finish * 1000)
    
    Do
        NowTick = GetTickCount
        DoEvents
    
    Loop Until NowTick >= EndTick
End Sub

Sub oldLotLabelPrint()
'///Shows the userform that lists all of our blendPNs so you can search them///////////////////////////////////////////////

    Dim frm As UserForm1
    Set frm = UserForms.Add(UserForm1.Name)
    frm.ListData = Sheets("SageLotNumbers").Range("B:B").CurrentRegion
    frm.Show

End Sub

Sub oldLotFind()

Dim blendPN As String, lotNum As String
blendPN = InputBox("Enter blend part number and two labels will be printed from the oldest available lot.", "Enter Part Number")
On Error GoTo errCatch
lotNum = WorksheetFunction.Index(Sheets("SageLotNumbers").Columns(8), Application.Match(blendPN, Sheets("SageLotNumbers").Columns(1), 0))
MsgBox lotNum

errCatch:
MsgBox ("That didn't work. Try retyping the part number.")
Call oldLotFind

End Sub

Sub labelPrinter()
'///Prints labels for the row selected/////////////////////////////////////////////////////////////////////////////////////
'///Assigned to row M:M////////////////////////////////////////////////////////////////////////////////////////////////////

    Dim protecc As String
    Dim labelPath As String
    Dim labelCount As Integer
    Dim labelInfo(4) As Variant

    'macros off
    Call macrosOff
    
    'select the correct filepath for the barTender document based on which protections are needed
    labelPath = "C:\OD\Kinpak, Inc\Blending - Documents\01 Spreadsheet Tools\Blending Label Templates & BTdatabases\BlendInventoryLabels\"
    protecc = ActiveCell.Offset(0, -1).value
    labelPath = labelPath & protecc & ".btw"

    'number of labels to be made
    labelCount = ActiveCell.value

    'Set values into array slots
    labelInfo(0) = ActiveCell.Offset(0, 1).value   'shortname
    labelInfo(1) = ActiveCell.Offset(0, -1).value  'protection type
    labelInfo(2) = ActiveCell.Offset(0, -14).value 'lot number
    labelInfo(3) = ActiveCell.Offset(0, -16).value 'blend PN

    'Put everything over there in the workbook that feeds the barTender templates
    Workbooks.Open "C:\OD\Kinpak, Inc\Blending - Documents\01 Spreadsheet Tools\Blending Label Templates & BTdatabases\BlendInventoryLabels\LabelGenLayover.xlsx"
    Range("A2").value = labelInfo(3)
    Range("B2").value = labelInfo(0)
    Range("C2").value = labelInfo(2)
    Range("D2").value = labelInfo(1)

    'save & close so barTender can access the spreadsheet
    Workbooks("LabelGenLayover.xlsx").Close SaveChanges:=True

    'go back to blend lot num generator workbook and determine label qty
    Workbooks("Blending Lot Number Generator.xlsb").Activate

    Dim answer As Integer
    answer = MsgBox("Print the pre-calculated number of labels for this lot?", vbQuestion + vbYesNo + vbDefaultButton2, "Label Quantity")

    If answer = vbYes Then
        
        ActiveWorkbook.FollowHyperlink Address:=labelPath, NewWindow:=True
       
        Delay (2)
        Application.SendKeys "^p", True
        Application.SendKeys labelCount, True
        Application.SendKeys "{Enter}", True
        Delay (1)
        Application.SendKeys "%{TAB}", True
    Else
        Dim userInputCount As Integer
        userInputCount = InputBox("How many labels?", "Labels", 1)
        ActiveWorkbook.FollowHyperlink Address:=labelPath, NewWindow:=True
        Delay (2)
        Application.SendKeys "^p", True
        Application.SendKeys userInputCount, True
        Application.SendKeys "{Enter}", True
        Delay (1)
        Application.SendKeys "%{TAB}", True
    End If
    
    'color cell gray
    Workbooks("Blending Lot Number Generator.xlsb").Activate
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = -0.249977111117893
       .PatternTintAndShade = 0
    End With

    'macros on
    Call macrosOn
    
    'turn NumLock back on
    ToggleNumlock True
    Windows("Blending Lot Number Generator.xlsb").Activate
    
End Sub


Sub GHSgen()

Dim blendPN, lotNum, picPath As String

blendPN = ActiveCell.Offset(0, -24).value
lotNum = ActiveCell.Offset(0, -22).value
Workbooks.Open ("C:\OD\Kinpak, Inc\Blending - Documents\01 Spreadsheet Tools\Blending Label Templates & BTdatabases\GHSLabelGen\GHS_LabelBook.xlsb")
picPath = "C:\OD\Kinpak, Inc\Blending - Documents\01 Spreadsheet Tools\Blending Label Templates & BTdatabases\GHSLabelGen\SDS_section2\" & blendPN & ".png"
    Range("A7").Select
    ActiveSheet.Pictures.Insert(picPath).Select
    Range("A30").Select
    ActiveSheet.Pictures.Insert(picPath).Select

Range("M2").value = blendPN
Range("M3").value = lotNum
Range("M6").Select


'Range("A1:J45").Select
'Selection.PrintOut
'
'Range("M2:M3").ClearContents
'
'Dim Pic As Object
'For Each Pic In ActiveSheet.Pictures
'Pic.Delete
'Next Pic
'
'ActiveWorkbook.Close

End Sub
